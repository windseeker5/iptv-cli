worker_processes auto;
rtmp_auto_push on;
events {}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;
        
        # Main live streaming application
        application live {
            live on;
            
            # Turn on HLS
            hls on;
            hls_path /nginx/hls;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_continuous on;
            
            # Disable consuming the stream from nginx as rtmp
            deny play all;
            
            # Enable recording
            record all;
            record_path /nginx/recordings;
            record_unique on;
            record_suffix .flv;
            
            # Allow publishing from any IP (restrict this in production)
            allow publish all;
            
            # Process streams with FFmpeg for multiple outputs
            exec ffmpeg -i rtmp://localhost/live/$name -async 1 -vsync -1
                        -c:v libx264 -c:a aac -b:v 256k -b:a 32k -vf "scale=480:270" -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost/live/$name_low
                        -c:v libx264 -c:a aac -b:v 768k -b:a 96k -vf "scale=854:480" -tune zerolatency -preset superfast -crf 23 -f flv rtmp://localhost/live/$name_mid
                        -c copy -f flv rtmp://localhost/live/$name_src;
        }
        
        # Playback application
        application play {
            live on;
            # Allow playback from any IP
            allow play all;
        }
    }
}

# HTTP configuration
http {
    sendfile off;
    tcp_nopush on;
    directio 512;
    default_type application/octet-stream;
    
    server {
        listen 8080;
        
        # Serve HLS files
        location /hls {
            # Disable cache
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET;
            
            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';
            
            # Allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            
            root /nginx;
            expires -1;
        }
        
        # Serve static files
        location /html {
            root /nginx;
            index index.html;
        }
        
        # Main page
        location / {
            root /nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Live streaming page
        location /live {
            root /nginx/html;
            try_files $uri /live.html;
        }
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }
        
        location /stat.xsl {
            root /nginx/html;
        }
        
        # Allow control of recordings
        location /control {
            rtmp_control all;
        }
    }
    
    # Admin interface
    server {
        listen 8081;
        
        location / {
            root /nginx/html;
            index admin.html;
        }
        
        location /api/streams {
            rtmp_stat all;
            add_header Content-Type application/json;
        }
    }
}