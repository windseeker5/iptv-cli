# NGINX configuration for Party Memory Wall
# Optimized for Raspberry Pi 4B deployment

upstream party_backend {
    server party-flask:6000;
}

# HTTP server (redirects to HTTPS in production)
server {
    listen 80;
    server_name party.local localhost;
    
    # Larger file upload limit for party media (500MB)
    client_max_body_size 500M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # For development, serve directly
    # In production, uncomment the redirect below
    # return 301 https://$server_name$request_uri;

    # Serve static files directly
    location /media/ {
        alias /usr/share/nginx/html/media/;
        expires 1h;
        add_header Cache-Control "public, immutable";
        
        # Handle video streaming
        location ~* \.(mp4|mov|avi|webm|m4v|mkv)$ {
            add_header Accept-Ranges bytes;
            add_header Content-Type video/mp4;
        }
        
        # Handle audio streaming
        location ~* \.(mp3|m4a|wav|flac)$ {
            add_header Accept-Ranges bytes;
            add_header Content-Type audio/mpeg;
        }
        
        # Handle images
        location ~* \.(jpg|jpeg|png|gif|webp|heic)$ {
            add_header Content-Type image/jpeg;
        }
    }
    
    # Serve frontend files
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ @backend;
        
        # Cache static assets
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API and upload requests go to Flask backend
    location /api/ {
        proxy_pass http://party_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Upload timeouts
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_send_timeout 300s;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # WebSocket endpoint
    location /socket.io/ {
        proxy_pass http://party_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
        proxy_read_timeout 86400;
    }
    
    # Health check
    location /health {
        proxy_pass http://party_backend/health;
        access_log off;
    }
    
    # Fallback to backend for dynamic routes
    location @backend {
        proxy_pass http://party_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # CORS headers for party network access
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, Content-Type, Accept, Authorization";
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Gzip compression for better performance on RPi
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
}

# HTTPS server (for production deployment)
server {
    listen 443 ssl http2;
    server_name party.local;
    
    # SSL certificates (create self-signed for local network)
    ssl_certificate /etc/nginx/ssl/party.crt;
    ssl_private_key /etc/nginx/ssl/party.key;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Same configuration as HTTP server
    client_max_body_size 500M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Include same location blocks as HTTP server
    include /etc/nginx/conf.d/party-locations.conf;
}